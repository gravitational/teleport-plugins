apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}-cluster-config
  namespace: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}
  labels:
{{ include "teleport.labels" . | indent 4 }}
data:
  teleport.yaml: |
    teleport:
      log:
        output: {{ .Values.config.teleport.log.output }}
        severity: {{ .Values.config.teleport.log.severity }}
      data_dir: {{ .Values.config.teleport.data_dir }}
      storage:
        type: {{ .Values.config.teleport.storage.type }}

    auth_service:
      enabled: {{ .Values.config.auth_service.enabled }}
      license_file: {{ .Values.license.mountPath }}/license.pem
      authentication:
        type: {{ .Values.config.auth_service.authentication.type }}
      public_addr: {{ template "teleport.main.authssh_public_addr" . }}
      cluster_name: {{ template "teleport.fullname" . }}-{{ .Values.mainClusterName }}.{{ .Values.cloudflare.domain }}

    ssh_service:
      enabled: yes
      public_addr: 127.0.0.1:3022
      {{- if .Values.teleportLabels.auth.static }}
      labels:
      {{- range $key, $value := .Values.teleportLabels.auth.static }}
        {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
      {{- if .Values.teleportLabels.auth.dynamic }}
      commands:
      {{ toYaml .Values.teleportLabels.auth.dynamic | indent 6 | trim }}
      {{- end }}

    proxy_service:
      enabled: {{ .Values.config.proxy_service.enabled }}
      public_addr: {{ template "teleport.main.proxyweb_public_addr" . }}
      ssh_public_addr: {{ template "teleport.main.proxyssh_public_addr" . }}
      web_listen_addr: {{ tpl .Values.config.proxy_service.web_listen_addr . }}
      listen_addr: {{ tpl .Values.config.proxy_service.listen_addr . }}
      {{- if .Values.proxy.tls.enabled }}
      https_key_file: /var/lib/certs/privkey.pem
      https_cert_file: /var/lib/certs/fullchain.pem
      {{- end }}
      kubernetes:
        enabled: {{ .Values.config.proxy_service.kubernetes.enabled }}
        listen_addr: {{ tpl .Values.config.proxy_service.kubernetes.listen_addr . }}
        public_addr: {{ template "teleport.main.proxykube_public_addr" . }}
  oidc.yaml: |
    kind: oidc
    version: v2
    metadata:
      name: {{ .Values.auth0.oidc_connector_name }}
    spec:
      display: {{ .Values.auth0.display }}
      issuer_url: {{ .Values.auth0.issuer_url }}
      client_id: {{ .Values.secrets.auth0.client_id }}
      client_secret: {{ .Values.secrets.auth0.client_secret }}
      redirect_url: https://{{ template "teleport.main.proxyweb_public_addr" . }}/v1/webapi/oidc/callback

      scope: {{ .Values.auth0.scope }}

      claims_to_roles:
      {{ toYaml .Values.auth0.claims_to_roles | indent 6 | trim }}

  admin-role.yaml: |
    kind: role
    version: v3
    metadata:
      name: admin
    spec:
      allow:
        logins: [root]
        kubernetes_groups: {{ .Values.kubernetes_groups.admin_role }}
        node_labels:
          '*': '*'
        rules:
        - resources:
          - role
          verbs:
          - list
          - read
        - resources:
          - auth_connector
          verbs:
          - list
          - create
        - resources:
          - session
          verbs:
          - list
          - read
        - resources:
          - trusted_cluster
          verbs:
          - list
          - create
          - read
          - update
          - delete
      deny: {}
      options:
        forward_agent: true
        max_session_ttl: 12h0m0s
        port_forwarding: false
  clusteradmin-role.yaml: |
    kind: role
    version: v3
    metadata:
      name: clusteradmin
    spec:
      allow:
        logins: [root]
        kubernetes_groups: {{ .Values.kubernetes_groups.clusteradmin_role }}
        node_labels:
          '*': '*'
        rules:
        - resources:
          - '*'
          verbs:
          - '*'
      deny: {}
      options:
        forward_agent: true
        max_session_ttl: 12h0m0s
        port_forwarding: true

{{- if not (eq (index .Values.extraClusterNames 0) "") -}}
{{- $root := . -}}
{{- range .Values.extraClusterNames }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "teleport.fullname" $root }}-{{ . }}-cluster-config
  namespace: {{ template "teleport.fullname" $root }}-{{ . }}
  labels:
{{ include "teleport.labels" $root | indent 4 }}
data:
  teleport.yaml: |
    teleport:
      log:
        output: {{ $root.Values.config.teleport.log.output }}
        severity: {{ $root.Values.config.teleport.log.severity }}
      data_dir: {{ $root.Values.config.teleport.data_dir }}
      storage:
        type: {{ $root.Values.config.teleport.storage.type }}

    auth_service:
      enabled: {{ $root.Values.config.auth_service.enabled }}
      license_file: /var/lib/license/license.pem
      authentication:
        type: {{ $root.Values.config.auth_service.authentication.type }}
      public_addr: {{ template "teleport.fullname" $root }}-{{ . }}.{{ $root.Values.cloudflare.domain }}:{{ $root.Values.service.ports.authssh.port }}
      cluster_name: {{ template "teleport.fullname" $root }}-{{ . }}.{{ $root.Values.cloudflare.domain }}

    ssh_service:
      enabled: yes
      public_addr: 127.0.0.1:3022
      {{- if $root.Values.teleportLabels.auth.static }}
      labels:
      {{- range $key, $value := $root.Values.teleportLabels.auth.static }}
        {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
      {{- if $root.Values.teleportLabels.auth.dynamic }}
      commands:
      {{ toYaml $root.Values.teleportLabels.auth.dynamic | indent 6 | trim }}
      {{- end }}

    proxy_service:
      enabled: {{ $root.Values.config.proxy_service.enabled }}
      public_addr: {{ template "teleport.fullname" $root }}-{{ . }}.{{ $root.Values.cloudflare.domain }}:{{ $root.Values.service.ports.proxyweb.port }}
      web_listen_addr: {{ tpl $root.Values.config.proxy_service.web_listen_addr $root }}
      listen_addr: {{ tpl $root.Values.config.proxy_service.listen_addr $root }}
      {{- if $root.Values.proxy.tls.enabled }}
      https_key_file: /var/lib/certs/privkey.pem
      https_cert_file: /var/lib/certs/fullchain.pem
      {{- end }}
      kubernetes:
        enabled: {{ $root.Values.config.proxy_service.kubernetes.enabled }}
        listen_addr: {{ tpl $root.Values.config.proxy_service.kubernetes.listen_addr $root }}
        public_addr: {{ template "teleport.fullname" $root }}-{{ . }}.{{ $root.Values.cloudflare.domain }}:{{ $root.Values.service.ports.proxykube.port }}
  trusted_cluster.yaml: |
    kind: trusted_cluster
    version: v2
    metadata:
      name: {{ template "teleport.fullname" $root }}-{{ $root.Values.mainClusterName }}.{{ $root.Values.cloudflare.domain }}
    spec:
      enabled: true
      token: TRUSTEDCLUSTER_JOIN_TOKEN_PLACEHOLDER
      tunnel_addr: {{ template "teleport.fullname" $root }}-{{ $root.Values.mainClusterName }}.{{ $root.Values.cloudflare.domain }}:{{ $root.Values.service.ports.proxytunnel.port }}
      web_proxy_addr: {{ template "teleport.fullname" $root }}-{{ $root.Values.mainClusterName }}.{{ $root.Values.cloudflare.domain }}:{{ $root.Values.service.ports.proxyweb.port }}
      {{- if $root.Values.license.enabled }}
      role_map:
      - remote: "admin"
        local: ["admin"]
      - remote: "clusteradmin"
        local: ["clusteradmin"]
      {{- end }}
  oidc.yaml: |
    kind: oidc
    version: v2
    metadata:
      name: {{ $root.Values.auth0.oidc_connector_name }}
    spec:
      display: {{ $root.Values.auth0.display }}
      issuer_url: {{ $root.Values.auth0.issuer_url }}
      client_id: {{ $root.Values.secrets.auth0.client_id }}
      client_secret: {{ $root.Values.secrets.auth0.client_secret }}
      redirect_url: https://{{ template "teleport.fullname" $root }}-{{ . }}.{{ $root.Values.cloudflare.domain }}:{{ $root.Values.service.ports.proxyweb.port }}/v1/webapi/oidc/callback

      scope: {{ $root.Values.auth0.scope }}

      claims_to_roles:
      {{ toYaml $root.Values.auth0.claims_to_roles | indent 6 | trim }}

  admin-role.yaml: |
    kind: role
    version: v3
    metadata:
      name: admin
    spec:
      allow:
        logins: [root]
        kubernetes_groups: {{ $root.Values.kubernetes_groups.admin_role }}
        node_labels:
          '*': '*'
        rules:
        - resources:
          - role
          verbs:
          - list
          - read
        - resources:
          - auth_connector
          verbs:
          - list
          - create
        - resources:
          - session
          verbs:
          - list
          - read
        - resources:
          - trusted_cluster
          verbs:
          - list
          - create
          - read
          - update
          - delete
      deny: {}
      options:
        forward_agent: true
        max_session_ttl: 12h0m0s
        port_forwarding: false
  clusteradmin-role.yaml: |
    kind: role
    version: v3
    metadata:
      name: clusteradmin
    spec:
      allow:
        logins: [root]
        kubernetes_groups: {{ $root.Values.kubernetes_groups.clusteradmin_role }}
        node_labels:
          '*': '*'
        rules:
        - resources:
          - '*'
          verbs:
          - '*'
      deny: {}
      options:
        forward_agent: true
        max_session_ttl: 12h0m0s
        port_forwarding: true
{{- end -}}
{{- end }}